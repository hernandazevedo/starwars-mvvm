apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


HashMap<String, String> baseDependencies = rootProject.ext.dependencies
HashMap<String, String> testDependencies = rootProject.ext.testDependencies
HashMap<String, String> application = rootProject.ext.application
HashMap<String, String> versions = rootProject.ext.versions

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode application.versionCode
        versionName application.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = false
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androitTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}


junitJacoco {
    jacocoVersion = '0.7.9'
    ignoreProjects = []
    excludes = ['**/R.class',
                '**/R$*.class',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                'android/**/*.*',
                'io/realm/**/*.*',
                '**/*_MembersInjector.class',
                '**/Dagger*Component.class',
                '**/Dagger*Component$Builder.class',
                '**/*Module_*Factory.class',
                '**/*_Factory.class']
    includeNoLocationClasses = true
}


androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":starwars-domain")

    implementation baseDependencies.kotlin_std_lib
    implementation baseDependencies.parceler_api
    annotationProcessor baseDependencies.parceler

    implementation baseDependencies.dagger2
    implementation baseDependencies.dagger2_android_support

    kapt baseDependencies.dagger2_compiler
    kapt baseDependencies.dagger2_android_processor

    implementation baseDependencies.rx_java
    implementation baseDependencies.rx_android
    implementation baseDependencies.rx_network

    implementation baseDependencies.retrofit2
    implementation baseDependencies.retrofit_rx_adapter
    implementation baseDependencies.retrofit_converter_gson
    implementation baseDependencies.gson
    implementation baseDependencies.okhttp3
    implementation baseDependencies.logging_interceptor
    implementation baseDependencies.timber
    testImplementation testDependencies.junit

}
